// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestAPIServer.Data;

namespace RestAPIServer.Migrations
{
    [DbContext(typeof(MSSQLContext))]
    partial class MSSQLContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RestAPIServer.Models.CommonCode", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CodeType")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CodeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DspSeq")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RegDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UseYn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code", "CodeType");

                    b.ToTable("CommonCode");
                });

            modelBuilder.Entity("RestAPIServer.Models.LanguageInfo", b =>
                {
                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageValue1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageValue2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageValue3")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LanguageCode");

                    b.ToTable("LanguageInfo");
                });

            modelBuilder.Entity("RestAPIServer.Models.SensorCurrentData", b =>
                {
                    b.Property<string>("SensorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ValueOccurTime")
                        .HasColumnType("bigint");

                    b.Property<long>("ValueSaveTime")
                        .HasColumnType("bigint");

                    b.ToTable("SensorCurrentData");
                });

            modelBuilder.Entity("RestAPIServer.Models.SensorRawData", b =>
                {
                    b.Property<string>("SensorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ValueOccurTime")
                        .HasColumnType("bigint");

                    b.Property<long>("ValueSaveTime")
                        .HasColumnType("bigint");

                    b.ToTable("SensorRawData");
                });

            modelBuilder.Entity("RestAPIServer.Models.SensorStatisticsDay", b =>
                {
                    b.Property<long>("EndTime")
                        .HasColumnType("bigint");

                    b.Property<string>("SensorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StartTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("SensorStatisticsDay");
                });

            modelBuilder.Entity("RestAPIServer.Models.SensorStatisticsHour", b =>
                {
                    b.Property<long>("EndTime")
                        .HasColumnType("bigint");

                    b.Property<string>("SensorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StartTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("SensorStatisticsHour");
                });

            modelBuilder.Entity("RestAPIServer.Models.SensorStatisticsMinute", b =>
                {
                    b.Property<long>("EndTime")
                        .HasColumnType("bigint");

                    b.Property<string>("SensorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StartTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("SensorStatisticsMinute");
                });

            modelBuilder.Entity("RestAPIServer.Models.SensorStatisticsMonth", b =>
                {
                    b.Property<long>("EndTime")
                        .HasColumnType("bigint");

                    b.Property<string>("SensorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StartTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("SensorStatisticsMonth");
                });

            modelBuilder.Entity("RestAPIServer.Models.System.FileManager", b =>
                {
                    b.Property<int>("FileCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FileExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginalFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SaveFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WindowName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WindowUniqueCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FileCode");

                    b.ToTable("FileManager");
                });
#pragma warning restore 612, 618
        }
    }
}
